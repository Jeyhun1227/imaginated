generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  description   String?
  verified      Boolean?
  individual    Int?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model all_reviews {
  id            Int       @id @default(autoincrement())
  individual    Int?
  user          String?
  premium_offer Int?
  description   String?
  like          String?
  dislike       String?
  benefit       String?
  type          String?   @db.VarChar(100)
  review        Float?
  title         String?   @db.VarChar(400)
  validation    String?   @db.VarChar(400)
  createdate    DateTime? @db.Timestamp(6)

  @@ignore
}

model category {
  id       Int     @id @default(autoincrement())
  category String? @db.VarChar(200)
  parent   String? @db.VarChar(200)
  ranking  Int?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model individual {
  id          Int      @default(autoincrement())
  first_name  String?  @db.VarChar(200)
  last_name   String?  @db.VarChar(200)
  aka         String?  @db.VarChar(200)
  description String?
  feature     String?  @db.VarChar(500)
  company     String?  @db.VarChar(200)
  location    String?  @db.VarChar(200)
  founder     String?  @db.VarChar(200)
  link        String?  @db.VarChar(200)
  category    String?  @db.VarChar(200)
  subcategory String[]
  verified    Boolean?
  imagelink   String?  @db.VarChar(500)
  linkname    String?  @db.VarChar(450)
  ranking     Int?
  user        String?  @db.VarChar(250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model individual_favorites {
  id          Int     @default(autoincrement())
  individual  Int?
  category    String? @db.VarChar(200)
  subcategory String? @db.VarChar(200)
  name        String? @db.VarChar(200)
  description String?
  imagelink   String? @db.VarChar(200)
  link        String? @db.VarChar(200)
  validation  String? @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model individual_free_offerings {
  id         Int     @default(autoincrement())
  individual Int?
  youtube    String? @db.VarChar(200)
  facebook   String? @db.VarChar(200)
  twitter    String? @db.VarChar(200)
  tiktok     String? @db.VarChar(200)
  instagram  String? @db.VarChar(200)
  linkedin   String? @db.VarChar(200)
  slack      String? @db.VarChar(200)
  discord    String? @db.VarChar(200)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model individual_premium_offerings {
  id          Int      @default(autoincrement())
  individual  Int?
  name        String?  @db.VarChar(200)
  description String?
  subheader   String?  @db.VarChar(200)
  subcategory String[]
  imagelink   String?  @db.VarChar(200)
  link        String?  @db.VarChar(200)
  type        String?  @db.VarChar(250)
  rank        Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model subcategory {
  id           Int     @default(autoincrement())
  subcategory  String? @db.VarChar(200)
  categoryname String? @db.VarChar(200)

  @@ignore
}

model USER_CUSTOM {
  userid             String    @id(map: "USERIDCUSTOM")
  verified           Boolean?
  type               String?   @db.VarChar(100)
  password           String?   @db.VarChar(100)
  email              String?
  name               String?   @db.VarChar(255)
  email_sent         Int?
  last_sent          DateTime? @db.Timestamp(6)
  previous_emails    String[]
  last_email_changed DateTime? @db.Timestamp(6)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model add_category {
  userid   String?  @db.VarChar(200)
  category String?  @db.VarChar(500)
  listing  String?  @db.VarChar(500)
  you      Boolean?
  extra    String?  @db.VarChar(500)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model all_reviews_deleted {
  id            Int       @default(autoincrement())
  individual    Int?
  user          String?
  premium_offer Int?
  description   String?
  like          String?
  dislike       String?
  benefit       String?
  type          String?   @db.VarChar(100)
  review        Float?
  title         String?   @db.VarChar(400)
  validation    String?   @db.VarChar(400)
  createdate    DateTime? @db.Timestamp(6)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model user_follow {
  userid       String?   @db.VarChar(150)
  follow_date  DateTime? @default(now()) @db.Timestamp(6)
  individualid String?   @db.VarChar(150)
  name         String?   @db.VarChar(500)
  aka          String?   @db.VarChar(200)
  imagelink    String?   @db.VarChar(500)
  link         String?   @db.VarChar(200)

  @@ignore
}
